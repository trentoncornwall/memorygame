{"version":3,"sources":["components/ScoreCard/index.js","components/Nav/index.js","components/IconCard/index.js","components/CardWrapper/index.js","components/Header/index.js","components/Main/index.js","App.js","index.js"],"names":["ScoreCard","props","className","score","topScore","Nav","children","IconCard","onClick","id","src","img","alt","name","CardWrapper","Header","text","Main","App","state","clicked","pmon","handleBtnClick","includes","lose","success","setState","win","shufflePokemon","reset","newPokemon","Pokemon","i","length","j","Math","floor","random","this","map","pokemon","key","image","Component","ReactDOM","render","document","getElementById"],"mappings":"2lCAkBeA,MAff,SAAmBC,GAClB,OACC,yBAAKC,UAAU,sBACd,4BACC,4BACC,0CADD,IAC0BD,EAAME,OAEhC,4BACC,8CADD,IAC8BF,EAAMG,a,MCJzBC,MAJf,SAAaJ,GACZ,OAAO,yBAAKC,UAAU,OAAOD,EAAMK,W,MCOrBC,MARf,SAAkBN,GAChB,OACE,yBAAKC,UAAU,WAAWM,QAASP,EAAMO,QAASC,GAAIR,EAAMQ,IAC1D,yBAAKC,IAAKT,EAAMU,IAAKC,IAAKX,EAAMY,S,aCCvBC,MAJf,SAAqBb,GACnB,OAAO,yBAAKC,UAAU,eAAeD,EAAMK,W,MCU9BS,MAXf,SAAgBd,GACf,OACC,yBAAKC,UAAU,UACd,yBAAKA,UAAU,YACd,uDAED,yBAAKA,UAAU,QAAQD,EAAMe,Q,MCFjBC,MAJf,SAAchB,GACZ,OAAO,yBAAKC,UAAU,QAAQD,EAAMK,WCmGvBY,E,2MA7FdC,MAAQ,CACPhB,MAAO,EACPC,SAAU,EACVgB,QAAS,GACTC,KAAM,GACNL,KAAM,sE,EAIPM,eAAiB,SAAAb,GAChB,EAAKU,MAAMC,QAAQG,SAASd,GAAM,EAAKe,KAAKf,GAAM,EAAKgB,QAAQhB,I,EAGhEgB,QAAU,SAAAhB,GACT,EAAKiB,SAAS,CACbvB,MAAO,EAAKgB,MAAMhB,MAAQ,EAC1BiB,QAAQ,GAAD,mBAAM,EAAKD,MAAMC,SAAjB,CAA0BX,IACjCO,KAAM,cAGc,KAArB,EAAKG,MAAMhB,MAAe,EAAKwB,MAAQ,EAAKC,kB,EAG7CD,IAAM,WACL,EAAKD,SAAS,CACbvB,MAAO,EACPC,SAAU,GACVY,KAAM,mCAGP,EAAKY,kB,EAGNJ,KAAO,SAAAf,GAEN,IAGMoB,EAAQ,SAAAzB,GACb,EAAKsB,SAAS,CACbvB,MAAO,EACPC,SAAUA,EACVgB,QAAS,GACTJ,KAAM,eAIKa,EAZI,EAAKV,MAAMhB,MAAQ,EAAKgB,MAAMf,SAY5B,EAAKe,MAAMhB,MAAe,EAAKgB,MAAMf,UACxD,EAAKwB,kB,EAGNA,eAAiB,WAEhB,IADA,IAAIE,EAAU,YAAOC,GACZC,EAAIF,EAAWG,OAAS,EAAGD,EAAI,EAAGA,IAAK,CAC/C,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADK,EAEd,CAACF,EAAWI,GAAIJ,EAAWE,IAA3DF,EAAWE,GAFmC,KAE/BF,EAAWI,GAFoB,KAIhD,EAAKR,SAAS,CACbL,KAAMS,K,mFAKPQ,KAAKV,mB,+BAGI,IAAD,OACR,OACC,6BAEC,kBAAC,EAAD,KACC,kBAAC,EAAD,CAAWzB,MAAOmC,KAAKnB,MAAMhB,MAAOC,SAAUkC,KAAKnB,MAAMf,YAG1D,kBAAC,EAAD,CAAQY,KAAMsB,KAAKnB,MAAMH,OACzB,kBAAC,EAAD,KACC,kBAAC,EAAD,KACEsB,KAAKnB,MAAME,KAAKkB,KAAI,SAAAC,GAAO,OAC3B,kBAAC,EAAD,CACCC,IAAKD,EAAQ/B,GACbA,GAAI+B,EAAQ/B,GACZI,KAAM2B,EAAQ3B,KACdL,QAAS,kBAAM,EAAKc,eAAekB,EAAQ/B,KAC3CE,IAAK6B,EAAQE,kB,GApFHC,aCLlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.7af10403.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction ScoreCard(props) {\n\treturn (\n\t\t<div className=\"ScoreCardContainer\">\n\t\t\t<ul>\n\t\t\t\t<li>\n\t\t\t\t\t<strong>Score:</strong> {props.score}\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<strong>Top Score:</strong> {props.topScore}\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</div>\n\t);\n}\n\nexport default ScoreCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Nav(props) {\n\treturn <div className=\"Nav\">{props.children}</div>;\n}\n\nexport default Nav;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction IconCard(props) {\n  return (\n    <div className=\"IconCard\" onClick={props.onClick} id={props.id}>\n      <img src={props.img} alt={props.name} />\n    </div>\n  );\n}\n\nexport default IconCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction CardWrapper(props) {\n  return <div className=\"CardWrapper\">{props.children}</div>;\n}\n\nexport default CardWrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Header(props) {\n\treturn (\n\t\t<div className=\"header\">\n\t\t\t<div className=\"pageName\">\n\t\t\t\t<h1>Pok√©mon Memory Game</h1>\n\t\t\t</div>\n\t\t\t<div className=\"info\">{props.text}</div>\n\t\t</div>\n\t);\n}\n\nexport default Header;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Main(props) {\n  return <div className=\"main\">{props.children}</div>;\n}\n\nexport default Main;\n","import React, { Component } from \"react\";\nimport ScoreCard from \"./components/ScoreCard\";\nimport Nav from \"./components/Nav\";\nimport IconCard from \"./components/IconCard\";\nimport Pokemon from \"./cardData/pokemon.json\";\nimport CardWrapper from \"./components/CardWrapper\";\nimport Header from \"./components/Header\";\nimport Main from \"./components/Main\";\n\nclass App extends Component {\n\tstate = {\n\t\tscore: 0,\n\t\ttopScore: 0,\n\t\tclicked: [],\n\t\tpmon: [],\n\t\ttext: \"Try and catch them all! Don't click on them more then once though!\"\n\t};\n\n\t// checks to see if it's been clicked yet and adjust state\n\thandleBtnClick = id => {\n\t\tthis.state.clicked.includes(id) ? this.lose(id) : this.success(id);\n\t};\n\n\tsuccess = id => {\n\t\tthis.setState({\n\t\t\tscore: this.state.score + 1,\n\t\t\tclicked: [...this.state.clicked, id],\n\t\t\ttext: \"Good Job!\"\n\t\t});\n\n\t\tthis.state.score === 11 ? this.win() : this.shufflePokemon();\n\t};\n\n\twin = () => {\n\t\tthis.setState({\n\t\t\tscore: 0,\n\t\t\ttopScore: 12,\n\t\t\ttext: \"Good Job, you caught them all!\"\n\t\t});\n\n\t\tthis.shufflePokemon();\n\t};\n\n\tlose = id => {\n\t\t//reset everything and replace topscore with current score if higher\n\t\tlet scoreCheck = this.state.score > this.state.topScore;\n\n\t\t//determines if its a new high score or nots\n\t\tconst reset = topScore => {\n\t\t\tthis.setState({\n\t\t\t\tscore: 0,\n\t\t\t\ttopScore: topScore,\n\t\t\t\tclicked: [],\n\t\t\t\ttext: \"Nice Try!\"\n\t\t\t});\n\t\t};\n\n\t\tscoreCheck ? reset(this.state.score) : reset(this.state.topScore);\n\t\tthis.shufflePokemon();\n\t};\n\n\tshufflePokemon = () => {\n\t\tlet newPokemon = [...Pokemon];\n\t\tfor (let i = newPokemon.length - 1; i > 0; i--) {\n\t\t\tconst j = Math.floor(Math.random() * (i + 1));\n\t\t\t[newPokemon[i], newPokemon[j]] = [newPokemon[j], newPokemon[i]];\n\t\t}\n\t\tthis.setState({\n\t\t\tpmon: newPokemon\n\t\t});\n\t};\n\n\tcomponentDidMount() {\n\t\tthis.shufflePokemon();\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{/* Render's score */}\n\t\t\t\t<Nav>\n\t\t\t\t\t<ScoreCard score={this.state.score} topScore={this.state.topScore} />\n\t\t\t\t</Nav>\n\t\t\t\t{/* Creates the Icons */}\n\t\t\t\t<Header text={this.state.text} />\n\t\t\t\t<Main>\n\t\t\t\t\t<CardWrapper>\n\t\t\t\t\t\t{this.state.pmon.map(pokemon => (\n\t\t\t\t\t\t\t<IconCard\n\t\t\t\t\t\t\t\tkey={pokemon.id}\n\t\t\t\t\t\t\t\tid={pokemon.id}\n\t\t\t\t\t\t\t\tname={pokemon.name}\n\t\t\t\t\t\t\t\tonClick={() => this.handleBtnClick(pokemon.id)}\n\t\t\t\t\t\t\t\timg={pokemon.image}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</CardWrapper>\n\t\t\t\t</Main>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}